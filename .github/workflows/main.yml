# GitHub Actions 完整部署流程
name: Deploy RShiny App with Azure AD Auth + KeyVault
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  RESOURCE_GROUP: "r-shiny-rg"
  LOCATION: "australiasoutheast"
  ACR_NAME: "rshinycr"
  ACR_LOGIN_SERVER: "rshinycr.azurecr.io"
  APP_SERVICE_PLAN: "shiny-plan"
  WEBAPP_NAME: "shiny-web-app"
  KEYVAULT_NAME: "my-shiny-keyvault"
  SECRET_NAME: "aad-client-secret"
  IMAGE_NAME: "shinyapp"
  AAD_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
  AAD_ISSUER_URL: "https://sts.windows.net/${{ secrets.AZURE_TENANT_ID }}/"
  TOKEN_AUDIENCE: "api://${{ secrets.AAD_CLIENT_ID }}"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push Docker image
      run: |
        echo "🐳 构建并推送Docker镜像到 $ACR_LOGIN_SERVER"
        az acr login --name $ACR_NAME
        docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:latest .
        docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:latest

    - name: Update container settings for App Service
      run: |
        echo "🔄 更新Web App的容器设置"
        az webapp config container set \
          --name $WEBAPP_NAME \
          --resource-group $RESOURCE_GROUP \
          --docker-custom-image-name $ACR_LOGIN_SERVER/$IMAGE_NAME:latest \
          --docker-registry-server-url https://$ACR_LOGIN_SERVER

    - name: Configure Key Vault references in App Service
      run: |
        echo "🔑 配置App Service使用Key Vault引用"
        # 设置应用程序配置以使用Key Vault引用
        az webapp config appsettings set \
          --name $WEBAPP_NAME \
          --resource-group $RESOURCE_GROUP \
          --settings \
            "AAD_CLIENT_SECRET=@Microsoft.KeyVault(SecretUri=https://$KEYVAULT_NAME.vault.azure.net/secrets/$SECRET_NAME/)"

    - name: Configure Azure AD Authentication
      run: |
        echo "🔐 配置Azure AD认证"
        # 从KeyVault获取系统托管身份的权限已在setup脚本中设置
        az webapp auth update \
          --name $WEBAPP_NAME \
          --resource-group $RESOURCE_GROUP \
          --enabled true \
          --action LoginWithAzureActiveDirectory \
          --aad-client-id $AAD_CLIENT_ID \
          --aad-token-issuer-url $AAD_ISSUER_URL \
          --aad-allowed-token-audiences $TOKEN_AUDIENCE

    - name: Restart App Service
      run: |
        echo "🔄 重启App Service以应用更改"
        az webapp restart --name $WEBAPP_NAME --resource-group $RESOURCE_GROUP

    - name: Verify deployment
      run: |
        echo "✅ 验证部署"
        APP_URL=$(az webapp show --name $WEBAPP_NAME --resource-group $RESOURCE_GROUP --query defaultHostName -o tsv)
        echo "应用已部署到: https://$APP_URL"
        # 等待应用启动
        sleep 30
        # 尝试访问应用健康检查端点
        curl -s -o /dev/null -w "%{http_code}" https://$APP_URL/health || echo "应用可能需要更多时间启动"